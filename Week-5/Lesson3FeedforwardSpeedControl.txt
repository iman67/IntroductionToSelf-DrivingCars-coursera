Welcome back. In the last video, we saw how to build a feedback controller for the longitudinal speed tracking problem that used PID control to generate acceleration commands together, with a low level controller to define throttle and brake inputs. In this final video of the module, we will modify our control architecture to incorporate feedforward commands, which will improve tracking performance, particularly in dynamic maneuvers. Specifically, we will see how to integrate both feedforward and feedback control into a combined control architecture.
Play video starting at ::52 and follow transcript0:52
And we will apply this architecture to longitudinal vehicle control. Let's get started.
Play video starting at ::58 and follow transcript0:58
First of all, let's compare the feedback versus feedforward block diagrams. The feedback block diagram shows the typical closed loop structure, where the current output is compared to a reference signal. And the error between the two is fed into the feedback controller, which generates the input to the plants.
Play video starting at :1:19 and follow transcript1:19
The feedforward block diagram shows an open loop structure, where the reference signal is directly fed into the feedforward controller, which again, generates the inputs to the plant. Feedforward controllers create their plant inputs by modeling the plant process, as we have done in module three of these course, and applying the appropriate inputs directly. In many applications, feedforward and feedback loops are combined to improve controller performance. This block diagram shows how a typical feedback, feedforward control structure works. You can think of feedforward control as providing the necessary inputs expected to keep the plant tracking its reference signal, and the feedback controller correcting for errors that result from either disturbances or inaccuracies in the plant model used by the feedforward controller. The input to the plant is simply the addition of the feedforward and the feedback inputs.
Play video starting at :2:18 and follow transcript2:18
To summarize this concept, the main reason that both feedback and feedforward controllers are used to control a system are feedforward controllers provide a predictive response as they produce a reference output to achieve a particular tracking response, particularly when the required inputs are non-zero.
Play video starting at :2:38 and follow transcript2:38
Feedback controllers provide a reactive response, which eliminates control errors due to the disturbances as they occur.
Play video starting at :2:47 and follow transcript2:47
The combination of feedback and feedforward control is widely used because of this complementary relationship. Because autonomous vehicles require non-zero steering commands to maintain a constant radius turn and a constant throttle or brake command to maintain constant speed or deceleration rates, feedforward commands are extremely beneficial in improving tracking performance in automated driving.
Play video starting at :3:11 and follow transcript3:11
Now let's take a look at the combined feedback and feedforward controllers to generate vehicle actuation for longitudinal speed control.
Play video starting at :3:21 and follow transcript3:21
The reference speed or drive cycle is defined by a higher level planner. And it is desirable that the vehicle follows the reference velocity precisely. The reference velocity is the input to the feedforward block, and the velocity error is the input to the feedback or PID control block. Both controllers produce two vehicle actuation signals, the throttle and the brake commands. Note that there is no low-level controller included in this block diagram, as we had in the pure PID feedback control from the previous video. The role of the low-level controller achieving the desired acceleration through the use of a mapping from accelerations to engine commands is now going to be handled by the feedforward block.
Play video starting at :4:7 and follow transcript4:07
The feedforward block gets only the reference signal as input, and its primary objective is to accurately set the inputs of the plan. To do this we can convert the entire longitudinal dynamics model into a fixed lookup table or reference map, that maps the reference velocity to the corresponding actuators signals assuming the vehicle is at steady state. This feedforward approach works well at steady state, but ignores the internal dynamics of the vehicle powertrain. And must also rely on the current vehicle state estimate to resolve some of the forces and dynamic models used.
Play video starting at :4:46 and follow transcript4:46
Let's look at the steps needed to develop the actuator commands from a feedforward lookup table. In our example, we are interested in following the reference velocity at each time step. Based on the kinematic relationship between the vehicle's speed and the wheel angular speed, we can calculate the wheel angular speed needed.
Play video starting at :5:6 and follow transcript5:06
The wheel angular speed is related to the engine angular speed, or engine RPM, through the gear ratios from the transmission, differential and final drive. So we can now compute the engine RPM corresponding to the required wheel angular speed all through the kinematic relationships defined in the modeling module.
Play video starting at :5:27 and follow transcript5:27
Then assuming steady state operation, the dynamics of the powertrain says that the engine torque must be equal to the total load torque acting on the vehicle. The source of the load torque is aerodynamic resistance, rolling resistance and vehicle gravitational resistance. We can compute the combined load torque using the current state of the vehicle, including its current speed, and the road slope.
Play video starting at :5:54 and follow transcript5:54
We now have a required engine torque and can combine that with the current engine operating speed in RPM to define the throttle position needed to generate the required torque.
Play video starting at :6:6 and follow transcript6:06
Once again, the engine map is defined for discrete steady state values of engine torque and RPM. And is interpolated as needed, based on the current vehicle operating point.
Play video starting at :6:18 and follow transcript6:18
Let's have a look at the comparison between PID control method described in the previous video and the combined feedforward, feedback method we've discussed in this video. We've used the same simulation parameters as in the previous video, including the engine map and dynamic model elements.
Play video starting at :6:37 and follow transcript6:37
The key difference between the two responses is visible as the reference speed changes. Because the PID controller needs errors to exist before it can correct them, its response lags the feedforward approach, which immediately applies the relevant input reference values.
Play video starting at :6:55 and follow transcript6:55
The feedforward tracking is still not perfect, however, as the vehicle response is ultimately governed by its inertia, and the feedforward approach we've presented relies on steady state modeling of the car. As the feedforward model becomes more precise, the feedback components can focus purely on disturbance rejection, and speed profile tracking can be done with consistent precision.
Play video starting at :7:19 and follow transcript7:19
In this video, we've covered the concept of feedforward controllers and the integrated feedback in feedforward controller to enhance the performance of reference tracking.
Play video starting at :7:29 and follow transcript7:29
We also applied the feedback and feedforward loops for autonomous vehicle speed control.
Play video starting at :7:35 and follow transcript7:35
Congratulations, you've now reached the end of this module on longitudinal control for self driving cars. You've reviewed the concepts of classical control and defined the PID controller. You've built a PID controller for longitudinal control of a car and you've applied feedforwad control to improve reference speed tracking.
Play video starting at :7:58 and follow transcript7:58
In the next module, we'll dive into lateral vehicle control design to guide our vehicle along a reference path. See you there. [MUSIC]